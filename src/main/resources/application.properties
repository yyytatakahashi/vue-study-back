# =========================
# PostgreSQL接続設定
# =========================

# PostgreSQLの接続URL（DB名 test_db に接続）
# jdbc:postgresql://[ホスト名]:[ポート番号]/[データベース名]
spring.datasource.url=jdbc:postgresql://localhost:5432/test_db

# データベースに接続するユーザー名（PostgreSQLインストール時に設定したユーザー）
spring.datasource.username=postgres

# 上記ユーザーのパスワード（セキュリティ上は環境変数やSecret Managerでの管理が推奨）
spring.datasource.password=@Yt01072002

# =========================
# JPA（Hibernate）関連設定
# =========================

# ddl-autoオプションは、エンティティクラスに基づいてDBスキーマをどう扱うかを決定
# create    : アプリ起動時にテーブルを削除して再作成（データ消える）
# update    : テーブルの変更を自動反映（データは保持）← 通常はこれで開発
# validate  : スキーマとエンティティが一致しているか検証のみ（自動作成しない）
# none      : 何もしない
spring.jpa.hibernate.ddl-auto=update

# 実行されるSQLをログ出力する（trueで有効）
spring.jpa.show-sql=true

# 出力されるSQLを読みやすいフォーマットに整形する
spring.jpa.properties.hibernate.format_sql=true

# PostgreSQL用のHibernate方言（PostgreSQL特有のSQL構文に対応）
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect

# =========================
# MyBatis設定
# =========================

# マッパーXMLファイルの配置場所（resources/mappers 配下の *.xml を読み込む）
mybatis.mapper-locations=classpath:/mappers/*.xml

# エイリアスを使うパッケージを指定（com.example.demo.entity.User → User などと書ける）
mybatis.type-aliases-package=com.example.demo.entity
